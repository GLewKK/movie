﻿@model MovieProject.ViewModels.RequestFormViewModel
@{
    ViewBag.Title = "Request";
}
<head>
    <link href="~/Content/NotValid.css" rel="stylesheet" />
    <link href="~/Content/progressbar.css" rel="stylesheet" />
    <link href="~/Content/spinner.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<div class="containerul">
    <ul class="progressbar">
        <li class="" id="one">Create Form</li>
        <li class="" id="two">Validate form</li>
        <li class="" id="three">Moderator</li>
        <li class="" id="four">Take your money</li>
    </ul>
</div>
<br />
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default" id="forms">
            <div class="panel-heading">
                <h4>My Credit</h4>
            </div>
            <div class="panel-body">
                <div class="col-lg-3">
                    <div class="hidden" id="text">

                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.FirstName, new { @class = "form-control", @readonly = "readonly", @id = "Firstname", @data_extra = @Model.Request.Credit.DataExtra.FirstName })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.LastName, new { @class = "form-control", @readonly = "readonly", @id = "Lastname", @data_extra = @Model.Request.Credit.DataExtra.LastName })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.Telephone, new { @class = "form-control", @readonly = "readonly", @id = "Telephone", @data_extra = @Model.Request.Credit.DataExtra.Telephone })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.IDNP, new { @class = "form-control", @readonly = "readonly", @id = "IDNP", @data_extra = @Model.Request.Credit.DataExtra.IDNP })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.DateOfBirth, new { @class = "form-control", @readonly = "readonly", @id = "DateOfBirth", @data_extra = @Model.Request.Credit.DataExtra.DateOfBirth })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.WorkSpace, new { @class = "form-control", @readonly = "readonly", @id = "WorkSpace", @data_extra = @Model.Request.Credit.DataExtra.WorkSpace })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Request.Credit.DataExtra.TelephoneWorkSpace, new { @class = "form-control", @readonly = "readonly", @id = "TelephoneWorkSpace", @data_extra = @Model.Request.Credit.DataExtra.TelephoneWorkSpace })
                    </div>

                    @if (Model.Request.Credit.DataExtra.IsMarried == true)
                    {
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.Request.Credit.DataExtra.IsMarried, new SelectList(new[] { new { Value = "True", Text = "Married" }, new { Value = "False", Text = "No married" } }, "Value", "Text", Model.Request.Credit.DataExtra.IsMarried), htmlAttributes: new { @class = "form-control toedit", @readonly = "readonly", @disabled = "disabled", @id = "IsMarried", @data_extra = @Model.Request.Credit.DataExtra.IsMarried })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Request.Credit.DataExtra.WorkSpaceHusbandWife, new { @class = "form-control", @readonly = "readonly", @id = "WorkSpaceHusbandWife", @data_extra = @Model.Request.Credit.DataExtra.WorkSpaceHusbandWife })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Request.Credit.DataExtra.OfficialVenitHusbandWife, new { @class = "form-control", @readonly = "readonly", @id = "OfficialVenitHusbandWife", @data_extra = @Model.Request.Credit.DataExtra.OfficialVenitHusbandWife })
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.Request.Credit.DataExtra.IsMarried, new SelectList(new[] { new { Value = "True", Text = "Married" }, new { Value = "False", Text = "Not married" } }, "Value", "Text", Model.Request.Credit.DataExtra.IsMarried), htmlAttributes: new { @class = "form-control toedit", @readonly = "readonly", @disabled = "disabled", @id = "IsMarried", @data_extra = @Model.Request.Credit.DataExtra.IsMarried })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Request.Credit.DataExtra.WorkSpaceHusbandWife, new { @class = "form-control hidden", @readonly = "readonly", @id = "WorkSpaceHusbandWife", @data_extra = @Model.Request.Credit.DataExtra.WorkSpaceHusbandWife })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Request.Credit.DataExtra.OfficialVenitHusbandWife, new { @class = "form-control hidden", @readonly = "readonly", @id = "OfficialVenitHusbandWife", @data_extra = @Model.Request.Credit.DataExtra.OfficialVenitHusbandWife })
                        </div>
                    }

                </div>


            </div>
            <div class="panel-footer">
                <button data-id-request="@Model.Request.Id" data-status="@Model.Request.Status.Name" type="submit" class="form-control btn btn-default disabled" style="width: 100px" id="buttonsubmit"><span class="waiting">Wait..</span></button> |
                <button type="submit" class="form-control btn btn-danger" style="width: 100px" id="buttoncancel">Cancel</button>
            </div>

        </div>


    </div>
</div>




<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>
    $(document).ready(function () {

        var status = $("#buttonsubmit").attr("data-status");
        if (status == "rejected") {
            $("#buttonsubmit").removeClass("btn-default");
            $("#buttonsubmit").addClass("btn-warning");
            $("#buttonsubmit").children("span").removeClass("waiting");
            $("#buttonsubmit").children("span").addClass("update");
            $("#buttonsubmit").children("span").text("Update");
        } 


        var list = @Html.Raw(Json.Encode(@Model.ListForms));
        debugger;
        if (list != null) {
            $.each(list,
                function(index, row) {
                    $("#" + row).addClass("notvalid");
                    $("#" + row).addClass("toedit");
                    $("#" + row).attr("placeholder", $("#" + row).attr("data-extra"));
                });
            $("#text").append("<h3>The following forms are not correct:</h3>");
            $("#text").toggleClass("hidden");
            $(".toedit").attr("readonly", false);
            $(".toedit").attr("disabled", false);
        }
        $("#IsMarried").change(function () {
            if ($(this).val() == "True") {
                $("#WorkSpaceHusbandWife").removeClass("hidden");
                $("#WorkSpaceHusbandWife").addClass("notvalid");
                $("#WorkSpaceHusbandWife").addClass("toedit");
                $("#WorkSpaceHusbandWife").attr("readonly", false);
                $("#WorkSpaceHusbandWife").attr("disabled", false);

                $("#OfficialVenitHusbandWife").removeClass("hidden");
                $("#OfficialVenitHusbandWife").addClass("notvalid");
                $("#OfficialVenitHusbandWife").addClass("toedit");
                $("#OfficialVenitHusbandWife").attr("readonly", false);
                $("#OfficialVenitHusbandWife").attr("disabled", false);
              
            }
            else {
                $("#WorkSpaceHusbandWife").removeClass("notvalid");
                $("#WorkSpaceHusbandWife").removeClass("toedit");
                $("#WorkSpaceHusbandWife").addClass("hidden");

                $("#OfficialVenitHusbandWife").removeClass("notvalid");
                $("#OfficialVenitHusbandWife").removeClass("toedit");
                $("#OfficialVenitHusbandWife").addClass("hidden");
            }
        });

        $("#WorkSpaceHusbandWife").change(function () {
            if ($(this).val() == $(this).attr("data-extra") || $(this).val() == "") {
                $(this).addClass("notvalid");
                $("#buttonsubmit").addClass("disabled");
            } else {
                $(this).removeClass("notvalid");
            }
        });
        $("#OfficialVenitHusbandWife").change(function () {
            if ($(this).val() == $(this).attr("data-extra") || $(this).val() == "") {
                $(this).addClass("notvalid");
                $("#buttonsubmit").addClass("disabled");
            } else {
                $(this).removeClass("notvalid");
            }
        });
        debugger;
        $(".toedit").change(function() {
            debugger;
            if ($(this).val() == $(this).attr("data-extra") || $(this).val() == "") {
                $(this).addClass("notvalid");

            } else {
                $(this).removeClass("notvalid");

            }
            var isNotValid = $('.toedit').hasClass("notvalid");
            if (!isNotValid) {

            }
        });


        var result = $("#buttonsubmit").attr("data-status");
        if (result == "pending for validation") {
            $("#one").addClass("active");
            $("#two").addClass("passive");
        } else {
            if (result == "rejected") {
                $("#one").addClass("passive");
                $("#one").addClass("redcolor");
                $("#two").addClass("disactive");
            } else {
                if (result == "pending for approval") {
                    $("#one").addClass("active");
                    $("#two").addClass("active");
                    $("#three").addClass("passive");
                } else {
                    if (result == "denied") {
                        $("#one").addClass("passive");
                        $("#one").addClass("greencolor");
                        $("#two").addClass("active");
                        $("#three").addClass("disactive");
                    } else {
                        if (result == "approved") {
                            $("#one").addClass("active");
                            $("#two").addClass("active");
                            $("#three").addClass("active");
                            $("#four").addClass("active");
                            alert("Your Request has been approved!!")
                        } else {
                            if (result == "not-approved") {
                                $("#one").addClass("active");
                                $("#two").addClass("active");
                                $("#three").addClass("disactive");
                                $("#three").addClass("redcolor");
                                $("#four").addClass("disactive");
                                alert("Your Request has not been approved!!")

                            }
                        }
                    }
                }
            }
        }
    });

    $("#buttonsubmit").on("click",
        function () {
            debugger;

            var status = $("#buttonsubmit").attr("data-status");
            if (status == "rejected") {
                var isNotValid = $('.toedit').hasClass("notvalid");
                if (!isNotValid) {
                    debugger;
                    var data = {
                        FirstName: $("#Firstname").val(),
                        LastName: $("#Lastname").val(),
                        Telephone: $("#Telephone").val(),
                        IDNP: $("#IDNP").val(),
                        RequestId: $("#buttonsubmit").attr("data-id-request"),
                        DateofBirthString: $("#DateOfBirth").val(),
                        WorkSpace: $("#WorkSpace").val(),
                        TelephoneWorkSpace: $("#TelephoneWorkSpace").val(),
                        OfficialVenit: $("#OfficialVenit").val(),
                        IsMarried: $("#IsMarried").val(),
                        WorkSpaceHusbandWife: $("#WorkSpaceHusbandWife").val(),
                        OfficialVenitHusbandWife: $("#OfficialVenitHusbandWife").val()
                    };

                    $.ajax({
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        method: "post",
                        url: '@Url.Action("SetStatusToEditor", "User")',
                        data: JSON.stringify(data),
                        success: function(result) {
                            debugger;
                            alert(result);
                            location.reload();
                        },
                        error: function(result) {
                            alert("ooops");
                        }
                    });
                } else {
                    alert("is not valid");
                }
            }


        });
    $("#buttoncancel").on("click",
        function () {
            var list = [];
            var requestId = $("#buttonsubmit").attr("data-id-request");
            $.ajax({
                url: '@Url.Action("SetStatus", "User")',
                method: "POST",
                data: { list: list, id: requestId, status: "cancelled"},
                    success: function (result) {
                        debugger;
                        alert(result);
                        location.reload();
                    },
                    error: function(result) {
                        alert("ooops");
                    }
                });
        });



    function updateStatus()
    {
        var requestId = $("#buttonsubmit").attr("data-id-request");
        $.ajax({
            method: "post",
            url: '@Url.Action("GetCurrentStatus", "User")',
            data: { requestId:requestId},
            success: function(result) {
                if (result != $("#buttonsubmit").attr("data-status")) {
                    $("#buttonsubmit").attr("data-status", result);
                    $(".progressbar li").removeClass();
                   
                        if (result == "rejected") {
                            $("#one").addClass("passive");
                            $("#one").addClass("redcolor");
                            $("#two").addClass("disactive");
                            location.reload();

                        } else {
                            $("#buttonsubmit").removeClass("btn-warning");
                            $("#buttonsubmit").addClass("btn-default");
                            $("#buttonsubmit").children("span").removeClass("update");
                            $("#buttonsubmit").children("span").addClass("waiting");
                            $("#buttonsubmit").children("span").text("Wait..");

                            if (result == "pending for validation") {
                                $("#one").addClass("active");
                                $("#two").addClass("passive");
                            } else {
                            if (result == "pending for approval") {
                                $("#one").addClass("active");
                                $("#two").addClass("active");
                                $("#three").addClass("passive");
                            } else {
                                if (result == "denied") {
                                    $("#one").addClass("passive");
                                    $("#one").addClass("greencolor");
                                    $("#two").addClass("active");
                                    $("#three").addClass("disactive");
                                } else {
                                    if (result == "approved") {
                                        $("#one").addClass("active");
                                        $("#two").addClass("active");
                                        $("#three").addClass("active");
                                        $("#four").addClass("active");
                                        alert("Success your request has been approved");
                                        location.reload();
                                    } else {
                                        if (result == "not-approved") {
                                            $("#one").addClass("active");
                                            $("#two").addClass("active");
                                            $("#three").addClass("disactive");
                                            $("#three").addClass("redcolor");
                                            $("#four").addClass("disactive"); 
                                            alert("Unfortunately, your request has been rejected");
                                            location.reload();

                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                    
            },
            error: function(result) {
                alert("ooops");
            }
        });

    }
    $(document).ready(function () {
        setInterval('updateStatus()', 1000);

    });
</script>
